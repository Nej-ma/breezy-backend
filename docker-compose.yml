services:
  # =============
  # TRAEFIK - API GATEWAY
  # =============
  traefik:
    image: traefik:v3.4
    container_name: breezy-traefik
    restart: unless-stopped
    command:
      # API Dashboard (en mode insecure pour le développement)
      - "--api.insecure=true"
      # Provider Docker
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Provider de fichiers pour configuration dynamique
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      # Points d'entrée
      - "--entrypoints.web.address=:80"
      # Logs (optionnel pour debug)
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "8080:80"    # API Gateway sur port 8080
      - "8081:8080"  # Dashboard Traefik sur port 8081
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik:/etc/traefik/dynamic:ro"
    networks:
      - breezy-microservices-network

  # =============
  # DATABASES
  # =============
  mongodb-auth:
    image: mongo:7.0
    container_name: breezy-mongodb-auth
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=breezy_auth
    volumes:
      - mongodb_auth_data:/data/db
    ports:
      - "27017:27017"  # Pour MongoDB Compass
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb-user:
    image: mongo:7.0
    container_name: breezy-mongodb-user
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=breezy_users
    volumes:
      - mongodb_user_data:/data/db
    ports:
      - "27018:27017"  # Pour MongoDB Compass
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb-post:
    image: mongo:7.0
    container_name: breezy-mongodb-post
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=breezy_posts
    volumes:
      - mongodb_post_data:/data/db
    ports:
      - "27019:27017"  # Pour MongoDB Compass
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb-notification:
    image: mongo:7.0
    container_name: breezy-mongodb-notification
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=breezy_notifications
    volumes:
      - mongodb_notification_data:/data/db
    ports:
      - "27020:27017"  # Pour MongoDB Compass
    networks:
      - breezy-microservices-network    
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============
  # MICROSERVICES
  # =============
  # Auth Service
  auth-service:
    build:
      context: ./microservices
      dockerfile: auth-service/docker/Dockerfile
    container_name: breezy-auth-service
    restart: unless-stopped
    env_file:
      - ./microservices/auth-service/.env
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb-auth:27017/breezy_auth
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-auth
    depends_on:
      mongodb-auth:
        condition: service_healthy
    volumes:
      - ./microservices/auth-service:/app
      - /app/node_modules
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      # Routes API avec PathPrefix pour correspondre à votre ancien système
      - "traefik.http.routers.auth-api.rule=PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=web"
      - "traefik.http.routers.auth-api.service=auth-service"
      - "traefik.http.services.auth-service.loadbalancer.server.port=3001"
      # Middleware pour retirer le préfixe /api/auth + sécurité
      - "traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/auth"
      - "traefik.http.routers.auth-api.middlewares=auth-stripprefix,api-chain@file"

  # User Service
  user-service:
    build:
      context: ./microservices
      dockerfile: user-service/docker/Dockerfile
    container_name: breezy-user-service
    restart: unless-stopped
    env_file:
      - ./microservices/user-service/.env
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb-user:27017/breezy_users
      - AUTH_SERVICE_URL=http://auth-service:3001
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-auth
    depends_on:
      mongodb-user:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ./microservices/user-service:/app
      - /app/node_modules
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-api.rule=PathPrefix(`/api/users`)"
      - "traefik.http.routers.user-api.entrypoints=web"
      - "traefik.http.routers.user-api.service=user-service"
      - "traefik.http.services.user-service.loadbalancer.server.port=3002"
      - "traefik.http.middlewares.user-stripprefix.stripprefix.prefixes=/api/users"
      - "traefik.http.routers.user-api.middlewares=user-stripprefix,api-chain@file"

  # Post Service
  post-service:
    build:
      context: ./microservices
      dockerfile: post-service/docker/Dockerfile
    container_name: breezy-post-service
    restart: unless-stopped
    env_file:
      - ./microservices/post-service/.env
    environment:
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb-post:27017/breezy_posts
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-auth
    depends_on:
      mongodb-post:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    volumes:
      - ./microservices/post-service:/app
      - /app/node_modules
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.post-api.rule=PathPrefix(`/api/posts`)"
      - "traefik.http.routers.post-api.entrypoints=web"
      - "traefik.http.routers.post-api.service=post-service"
      - "traefik.http.services.post-service.loadbalancer.server.port=3003"
      - "traefik.http.middlewares.post-stripprefix.stripprefix.prefixes=/api/posts"
      - "traefik.http.routers.post-api.middlewares=post-stripprefix,api-chain@file"

  # Notification Service
  notification-service:
    build:
      context: ./microservices
      dockerfile: notification-service/docker/Dockerfile
    container_name: breezy-notification-service
    restart: unless-stopped
    env_file:
      - ./microservices/notification-service/.env
    environment:
      - PORT=3004
      - MONGODB_URI=mongodb://mongodb-notification:27017/breezy_notifications
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - POST_SERVICE_URL=http://post-service:3003
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-auth
    depends_on:
      mongodb-notification:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ./microservices/notification-service:/app
      - /app/node_modules
    networks:
      - breezy-microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notification-api.rule=PathPrefix(`/api/notifications`)"
      - "traefik.http.routers.notification-api.entrypoints=web"
      - "traefik.http.routers.notification-api.service=notification-service"
      - "traefik.http.services.notification-service.loadbalancer.server.port=3004"
      - "traefik.http.middlewares.notification-stripprefix.stripprefix.prefixes=/api/notifications"
      - "traefik.http.routers.notification-api.middlewares=notification-stripprefix,api-chain@file"

  # =============
  # SWAGGER AGGREGATOR (pour documentation unifiée)
  # =============
  swagger-aggregator:
    build:
      context: ./swagger-aggregator
      dockerfile: Dockerfile
    container_name: breezy-swagger-aggregator
    restart: unless-stopped
    networks:
      - breezy-microservices-network
    environment:
      - PORT=3005
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - POST_SERVICE_URL=http://post-service:3003
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
    depends_on:
      - auth-service
      - user-service
      - post-service
      - notification-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      # Route pour /docs
      - "traefik.http.routers.docs.rule=PathPrefix(`/docs`)"
      - "traefik.http.routers.docs.entrypoints=web"
      - "traefik.http.routers.docs.service=swagger-aggregator"
      - "traefik.http.services.swagger-aggregator.loadbalancer.server.port=3005"
      - "traefik.http.routers.docs.middlewares=web-chain@file"
      # Route pour la racine / (page d'accueil)
      - "traefik.http.routers.root.rule=Path(`/`)"
      - "traefik.http.routers.root.entrypoints=web"
      - "traefik.http.routers.root.service=swagger-aggregator"
      - "traefik.http.routers.root.priority=1"
      - "traefik.http.routers.root.middlewares=web-chain@file"

volumes:
  mongodb_auth_data:
  mongodb_user_data:
  mongodb_post_data:
  mongodb_notification_data:

networks:
  breezy-microservices-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16